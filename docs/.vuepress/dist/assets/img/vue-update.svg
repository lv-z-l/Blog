<svg id="SvgjsSvg1006" width="1907.4601287841797" height="731.1164398193359" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs"><defs id="SvgjsDefs1007"><marker id="SvgjsMarker1022" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1023" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1034" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1035" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1044" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1045" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1056" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1057" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1070" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1071" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1082" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1083" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1126" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1127" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1174" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1175" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1178" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1179" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1182" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1183" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1192" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1193" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1202" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1203" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1236" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1237" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1240" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1241" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1250" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1251" d="M0,0 L14,5 L0,10 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker></defs><g id="SvgjsG1008" transform="translate(25,256.9204559326172)"><path id="SvgjsPath1009" d="M 0 0L 120 0L 120 40L 0 40Z" stroke="none" fill="none"></path><g id="SvgjsG1010"><text id="SvgjsText1011" font-family="微软雅黑" text-anchor="middle" font-size="18px" width="120px" fill="#f44336" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="18px" weight="700" font-style="" opacity="1" y="4.25" transform="rotate(0)"><tspan id="SvgjsTspan1012" dy="22" x="60"><tspan id="SvgjsTspan1013" style="text-decoration:;">Vue派发更新</tspan></tspan></text></g></g><g id="SvgjsG1014" transform="translate(25,318.9034080505371)"><path id="SvgjsPath1015" d="M 0 0L 100 0L 100 70L 0 70Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1016"><text id="SvgjsText1017" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="24.375" transform="rotate(0)"><tspan id="SvgjsTspan1018" dy="16" x="50"><tspan id="SvgjsTspan1019" style="text-decoration:;">修改响应数据</tspan></tspan></text></g></g><g id="SvgjsG1020"><path id="SvgjsPath1021" d="M126 353.9034080505371L141.25142669677734 353.9034080505371L141.25142669677734 353.9034080505371L153.9028533935547 353.9034080505371" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1022)"></path></g><g id="SvgjsG1024" transform="translate(157.5028533935547,318.9034080505371)"><path id="SvgjsPath1025" d="M 0 4Q 0 0 4 0L 167 0Q 171 0 171 4L 171 66Q 171 70 167 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1026"><text id="SvgjsText1027" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="151px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="15.875" transform="rotate(0)"><tspan id="SvgjsTspan1028" dy="16" x="85.5"><tspan id="SvgjsTspan1029" style="text-decoration:;">触发defineReactive的</tspan></tspan><tspan id="SvgjsTspan1030" dy="16" x="85.5"><tspan id="SvgjsTspan1031" style="text-decoration:;">setter逻辑</tspan></tspan></text></g></g><g id="SvgjsG1032"><path id="SvgjsPath1033" d="M329.5028533935547 353.9034080505371L344.75428009033203 353.9034080505371L344.75428009033203 353.9034080505371L357.40570678710935 353.9034080505371" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1034)"></path></g><g id="SvgjsG1036" transform="translate(361.0057067871094,318.9034080505371)"><path id="SvgjsPath1037" d="M 0 4Q 0 0 4 0L 96 0Q 100 0 100 4L 100 66Q 100 70 96 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1038"><text id="SvgjsText1039" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="24.375" transform="rotate(0)"><tspan id="SvgjsTspan1040" dy="16" x="50"><tspan id="SvgjsTspan1041" style="text-decoration:;">dep.notify()</tspan></tspan></text></g></g><g id="SvgjsG1042"><path id="SvgjsPath1043" d="M462.0057067871094 353.9034080505371L477.2571334838867 353.9034080505371L477.2571334838867 353.9034080505371L489.90856018066404 353.9034080505371" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1044)"></path></g><g id="SvgjsG1046" transform="translate(493.50856018066406,318.9034080505371)"><path id="SvgjsPath1047" d="M 0 4Q 0 0 4 0L 210 0Q 214 0 214 4L 214 66Q 214 70 210 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1048"><text id="SvgjsText1049" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="194px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="15.875" transform="rotate(0)"><tspan id="SvgjsTspan1050" dy="16" x="107"><tspan id="SvgjsTspan1051" style="text-decoration:;">遍历subs，也就是watcher的数</tspan></tspan><tspan id="SvgjsTspan1052" dy="16" x="107"><tspan id="SvgjsTspan1053" style="text-decoration:;">组，调用update</tspan></tspan></text></g></g><g id="SvgjsG1054"><path id="SvgjsPath1055" d="M708.5085601806641 353.9034080505371L861.7557067871094 353.9034080505371L861.7557067871094 353.9034080505371L1012.4028533935548 353.9034080505371" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1056)"></path><rect id="SvgjsRect1058" width="104" height="16" x="808.4557067871094" y="345.9034080505371" fill="#ffffff"></rect><text id="SvgjsText1059" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="104px" fill="#323232" font-weight="400" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="343.2784080505371" transform="rotate(0)"><tspan id="SvgjsTspan1060" dy="16" x="860.4557067871094"><tspan id="SvgjsTspan1061" style="text-decoration:;">⼀般组件数据更新</tspan></tspan></text></g><g id="SvgjsG1062" transform="translate(1016.0028533935547,318.9034080505371)"><path id="SvgjsPath1063" d="M 0 4Q 0 0 4 0L 128 0Q 132 0 132 4L 132 66Q 132 70 128 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1064"><text id="SvgjsText1065" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="112px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="24.375" transform="rotate(0)"><tspan id="SvgjsTspan1066" dy="16" x="66"><tspan id="SvgjsTspan1067" style="text-decoration:;">queueWatcher</tspan></tspan></text></g></g><g id="SvgjsG1068"><path id="SvgjsPath1069" d="M708.5085601806641 353.9034080505371L782.7528533935547 353.9034080505371L782.7528533935547 261.9204559326172L756.3528533935547 261.9204559326172" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1070)"></path><rect id="SvgjsRect1072" width="64" height="16" x="750.7528533935547" y="323.83407859802253" fill="#ffffff"></rect><text id="SvgjsText1073" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="64px" fill="#323232" font-weight="400" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="321.20907859802253" transform="rotate(0)"><tspan id="SvgjsTspan1074" dy="16" x="782.7528533935547"><tspan id="SvgjsTspan1075" style="text-decoration:;">computed</tspan></tspan></text></g><g id="SvgjsG1076" transform="translate(652.7528533935547,226.9204559326172)"><path id="SvgjsPath1077" d="M 0 4Q 0 0 4 0L 96 0Q 100 0 100 4L 100 66Q 100 70 96 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1078"><text id="SvgjsText1079" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="24.375" transform="rotate(0)"></text></g></g><g id="SvgjsG1080"><path id="SvgjsPath1081" d="M708.5085601806641 353.9034080505371L734.7528533935547 353.9034080505371L734.7528533935547 409.286360168457" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1082)"></path><rect id="SvgjsRect1084" width="27" height="16" x="721.2528533935547" y="360.47273750305175" fill="#ffffff"></rect><text id="SvgjsText1085" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="27px" fill="#323232" font-weight="400" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="357.84773750305175" transform="rotate(0)"><tspan id="SvgjsTspan1086" dy="16" x="734.7528533935547"><tspan id="SvgjsTspan1087" style="text-decoration:;">sync</tspan></tspan></text></g><g id="SvgjsG1088" transform="translate(684.7528533935547,410.88636016845703)"><path id="SvgjsPath1089" d="M 0 4Q 0 0 4 0L 96 0Q 100 0 100 4L 100 66Q 100 70 96 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1090"><text id="SvgjsText1091" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="24.375" transform="rotate(0)"></text></g></g><g id="SvgjsG1092" transform="translate(855.8665161132812,25.01136398315427)"><path id="SvgjsPath1093" d="M 0 0L 438 0L 454 16L 454 231.9090919494629L 0 231.9090919494629L 0 0Z" stroke="none" fill-opacity="1" fill="#ffffaa"></path><path id="SvgjsPath1094" d="M 438 0L 438 16L 454 16Z" stroke="none" fill-opacity="1" fill="#cdcdcd"></path><path id="SvgjsPath1095" d="M 0 0L 438 0L 454 16L 454 231.9090919494629L 0 231.9090919494629L 0 0Z" stroke="none" fill="none"></path><g id="SvgjsG1096"><text id="SvgjsText1097" font-family="微软雅黑" text-anchor="start" font-size="12px" width="434px" fill="#323232" font-weight="400" align="top" lineHeight="125%" anchor="start" family="微软雅黑" size="12px" weight="400" font-style="" opacity="1" y="7.5" transform="rotate(0)"><tspan id="SvgjsTspan1098" dy="15" x="10"><tspan id="SvgjsTspan1099" style="text-decoration:;">引⼊了⼀个队列的概念，这也是 Vue 在做派发更新的时候的⼀个优化的点，它并</tspan></tspan><tspan id="SvgjsTspan1100" dy="15" x="10"><tspan id="SvgjsTspan1101" style="text-decoration:;">不会每次数据改变都触发 watcher 的回调，⽽是把这些 watcher 先添加到⼀个队</tspan></tspan><tspan id="SvgjsTspan1102" dy="15" x="10"><tspan id="SvgjsTspan1103" style="text-decoration:;">列⾥，然后在 nextTick 后执⾏ flushSchedulerQueue 。</tspan></tspan><tspan id="SvgjsTspan1104" dy="15" x="10"><tspan id="SvgjsTspan1105" style="text-decoration:;"> </tspan></tspan><tspan id="SvgjsTspan1106" dy="15" x="10"><tspan id="SvgjsTspan1107" style="text-decoration:;">这⾥有⼏个细节要注意⼀下:</tspan></tspan><tspan id="SvgjsTspan1108" dy="15" x="10"><tspan id="SvgjsTspan1109" style="text-decoration:;">1.⾸先⽤ has 对象保证同⼀个 Watcher 只添加⼀次</tspan></tspan><tspan id="SvgjsTspan1110" dy="15" x="10"><tspan id="SvgjsTspan1111" style="text-decoration:;"> </tspan></tspan><tspan id="SvgjsTspan1112" dy="15" x="10"><tspan id="SvgjsTspan1113" style="text-decoration:;">2.接着对flushing 的判断，flushing为true代表正在遍历watcher执行update，在</tspan></tspan><tspan id="SvgjsTspan1114" dy="15" x="10"><tspan id="SvgjsTspan1115" style="text-decoration:;">watcher队列从后往前找，找到第⼀个待插⼊ watcher 的 id ⽐当前队列中 </tspan></tspan><tspan id="SvgjsTspan1116" dy="15" x="10"><tspan id="SvgjsTspan1117" style="text-decoration:;">watcher 的 id ⼤的位置，插入watcher</tspan></tspan><tspan id="SvgjsTspan1118" dy="15" x="10"><tspan id="SvgjsTspan1119" style="text-decoration:;"> </tspan></tspan><tspan id="SvgjsTspan1120" dy="15" x="10"><tspan id="SvgjsTspan1121" style="text-decoration:;">3.通过 wating 保证对nextTick(flushSchedulerQueue) 的调⽤逻辑只有⼀次</tspan></tspan><tspan id="SvgjsTspan1122" dy="15" x="10"><tspan id="SvgjsTspan1123" style="text-decoration:;">可以理解它是在下⼀个 tick，也就是异步的去执flushSchedulerQueue </tspan></tspan></text></g></g><g id="SvgjsG1124"><path id="SvgjsPath1125" d="M1149.0028533935547 353.9034080505371L1204.754280090332 353.9034080505371L1204.754280090332 353.9034080505371L1256.9057067871095 353.9034080505371" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1126)"></path></g><g id="SvgjsG1128" transform="translate(1260.5057067871094,303.53977394104004)"><path id="SvgjsPath1129" d="M 0 4Q 0 0 4 0L 183 0Q 187 0 187 4L 187 96.72726821899414Q 187 100.72726821899414 183 100.72726821899414L 4 100.72726821899414Q 0 100.72726821899414 0 96.72726821899414Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1130"><text id="SvgjsText1131" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="167px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="39.73863410949707" transform="rotate(0)"><tspan id="SvgjsTspan1132" dy="16" x="93.5"><tspan id="SvgjsTspan1133" style="text-decoration:;">flushSchedulerQueue</tspan></tspan></text></g></g><g id="SvgjsG1134" transform="translate(855.8665161132812,437.12499618530273)"><path id="SvgjsPath1135" d="M 0 0L 438 0L 454 16L 454 268.54972648620605L 0 268.54972648620605L 0 0Z" stroke="none" fill-opacity="1" fill="#ffffaa"></path><path id="SvgjsPath1136" d="M 438 0L 438 16L 454 16Z" stroke="none" fill-opacity="1" fill="#cdcdcd"></path><path id="SvgjsPath1137" d="M 0 0L 438 0L 454 16L 454 268.54972648620605L 0 268.54972648620605L 0 0Z" stroke="none" fill="none"></path><g id="SvgjsG1138"><text id="SvgjsText1139" font-family="微软雅黑" text-anchor="start" font-size="12px" width="434px" fill="#323232" font-weight="400" align="top" lineHeight="125%" anchor="start" family="微软雅黑" size="12px" weight="400" font-style="" opacity="1" y="7.5" transform="rotate(0)"><tspan id="SvgjsTspan1140" dy="15" x="10"><tspan id="SvgjsTspan1141" style="text-decoration:;">主要逻辑：</tspan></tspan><tspan id="SvgjsTspan1142" dy="15" x="10"><tspan id="SvgjsTspan1143" style="text-decoration:;"> </tspan></tspan><tspan id="SvgjsTspan1144" dy="15" x="10"><tspan id="SvgjsTspan1145" style="text-decoration:;">1.跟据watcher的id由小到大排序，为了确保以下几点：</tspan></tspan><tspan id="SvgjsTspan1146" dy="15" x="10"><tspan id="SvgjsTspan1147" style="text-decoration:;">   1.1组件的更新由⽗到⼦；因为⽗组件的创建过程是先于⼦的，所以 watcher 的</tspan></tspan><tspan id="SvgjsTspan1148" dy="15" x="10"><tspan id="SvgjsTspan1149" style="text-decoration:;">创     建也是先⽗后⼦，执⾏顺序也应该保持先⽗后⼦。</tspan></tspan><tspan id="SvgjsTspan1150" dy="15" x="10"><tspan id="SvgjsTspan1151" style="text-decoration:;">   </tspan><tspan id="SvgjsTspan1152" style="text-decoration:;font-size: inherit;">1.2⽤户的⾃定义 watcher 要优先于渲染 watcher 执⾏；因为⽤户⾃定义 </tspan></tspan><tspan id="SvgjsTspan1153" dy="15" x="10"><tspan id="SvgjsTspan1154" style="text-decoration:;font-size: inherit;">watcher 是在渲染watcher 之前创建的。</tspan></tspan><tspan id="SvgjsTspan1155" dy="15" x="10"><tspan id="SvgjsTspan1156" style="text-decoration:;font-size: inherit;">   1.3如果⼀个组件在⽗组件的 watcher 执⾏期间被销毁，那么它对应的 watcher </tspan></tspan><tspan id="SvgjsTspan1157" dy="15" x="10"><tspan id="SvgjsTspan1158" style="text-decoration:;font-size: inherit;">执 ⾏都可以被跳过，所以⽗组件的 watcher 应该先执⾏。</tspan></tspan><tspan id="SvgjsTspan1159" dy="15" x="10"><tspan id="SvgjsTspan1160" style="text-decoration:;"> </tspan></tspan><tspan id="SvgjsTspan1161" dy="15" x="10"><tspan id="SvgjsTspan1162" style="text-decoration:;font-size: inherit;">2.遍历queue, 执行watcher的run方法，遍历时不能缓存queue的length，因为当</tspan></tspan><tspan id="SvgjsTspan1163" dy="15" x="10"><tspan id="SvgjsTspan1164" style="text-decoration:;font-size: inherit;">执行watcher.run()时，可能</tspan><tspan id="SvgjsTspan1165" style="text-decoration:;">再次添加新的 watcher ，这样会再次执⾏到 </tspan></tspan><tspan id="SvgjsTspan1166" dy="15" x="10"><tspan id="SvgjsTspan1167" style="text-decoration:;">queueWatcher, 然后queue的length就会改变。代码中的注释如下：</tspan></tspan><tspan id="SvgjsTspan1168" dy="15" x="10"><tspan id="SvgjsTspan1169" style="text-decoration:;">// do not cache length because more watchers might be pushed</tspan></tspan><tspan id="SvgjsTspan1170" dy="15" x="10"><tspan id="SvgjsTspan1171" style="text-decoration:;">// as we run existing watchers</tspan></tspan></text></g></g><g id="SvgjsG1172"><path id="SvgjsPath1173" d="M1082.8665161132812 317.9034080505371L1082.8665161132812 287.91193199157715L1082.8665161132812 287.91193199157715L1082.8665161132812 259.5204559326172" stroke-dasharray="3,3" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1174)"></path></g><g id="SvgjsG1176"><path id="SvgjsPath1177" d="M1354.0057067871094 405.2670421600342L1354.0057067871094 571.3998594284058L1312.4665161132812 571.3998594284058" stroke-dasharray="3,3" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1178)"></path></g><g id="SvgjsG1180"><path id="SvgjsPath1181" d="M1448.5057067871094 353.9034080505371L1469.9815216064453 353.9034080505371L1469.9815216064453 353.9034080505371L1489.4 353.9034080505371" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1182)"></path></g><g id="SvgjsG1184" transform="translate(1493,318.9034080505371)"><path id="SvgjsPath1185" d="M 0 4Q 0 0 4 0L 128 0Q 132 0 132 4L 132 66Q 132 70 128 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1186"><text id="SvgjsText1187" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="112px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="24.375" transform="rotate(0)"><tspan id="SvgjsTspan1188" dy="16" x="66"><tspan id="SvgjsTspan1189" style="text-decoration:;">watcher.run()</tspan></tspan></text></g></g><g id="SvgjsG1190"><path id="SvgjsPath1191" d="M1626 353.9034080505371L1650.0480670928955 353.9034080505371L1650.0480670928955 353.9034080505371L1673.03879776001 353.9034080505371" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1192)"></path></g><g id="SvgjsG1194" transform="translate(1676.63879776001,318.9034080505371)"><path id="SvgjsPath1195" d="M 0 4Q 0 0 4 0L 154 0Q 158 0 158 4L 158 66Q 158 70 154 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1196"><text id="SvgjsText1197" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="138px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="24.375" transform="rotate(0)"><tspan id="SvgjsTspan1198" dy="16" x="79"><tspan id="SvgjsTspan1199" style="text-decoration:;">resetSchedulerState</tspan></tspan></text></g></g><g id="SvgjsG1200"><path id="SvgjsPath1201" d="M1755.63879776001 317.9034080505371L1755.63879776001 288.74647567749025L1783.2418022155764 288.74647567749025L1783.2418022155764 261.5204559326172" stroke-dasharray="3,3" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1202)"></path></g><g id="SvgjsG1204" transform="translate(1702,188.9204559326172)"><path id="SvgjsPath1205" d="M 0 0L 142 0L 158 16L 158 70L 0 70L 0 0Z" stroke="none" fill-opacity="1" fill="#ffffaa"></path><path id="SvgjsPath1206" d="M 142 0L 142 16L 158 16Z" stroke="none" fill-opacity="1" fill="#cdcdcd"></path><path id="SvgjsPath1207" d="M 0 0L 142 0L 158 16L 158 70L 0 70L 0 0Z" stroke="none" fill="none"></path><g id="SvgjsG1208"><text id="SvgjsText1209" font-family="微软雅黑" text-anchor="start" font-size="13px" width="138px" fill="#323232" font-weight="400" align="top" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="7.375" transform="rotate(0)"><tspan id="SvgjsTspan1210" dy="16" x="10"><tspan id="SvgjsTspan1211" style="text-decoration:;">控制流程状态的⼀些变</tspan></tspan><tspan id="SvgjsTspan1212" dy="16" x="10"><tspan id="SvgjsTspan1213" style="text-decoration:;">量恢复到初始值，把 </tspan></tspan><tspan id="SvgjsTspan1214" dy="16" x="10"><tspan id="SvgjsTspan1215" style="text-decoration:;">watcher 队列清空</tspan></tspan></text></g></g><g id="SvgjsG1216" transform="translate(1330.9577293395996,116.92472267150885)"><path id="SvgjsPath1217" d="M 0 0L 307.18106842041016 0L 323.18106842041016 16L 323.18106842041016 139.99573326110834L 0 139.99573326110834L 0 0Z" stroke="none" fill-opacity="1" fill="#ffffaa"></path><path id="SvgjsPath1218" d="M 307.18106842041016 0L 307.18106842041016 16L 323.18106842041016 16Z" stroke="none" fill-opacity="1" fill="#cdcdcd"></path><path id="SvgjsPath1219" d="M 0 0L 307.18106842041016 0L 323.18106842041016 16L 323.18106842041016 139.99573326110834L 0 139.99573326110834L 0 0Z" stroke="none" fill="none"></path><g id="SvgjsG1220"><text id="SvgjsText1221" font-family="微软雅黑" text-anchor="start" font-size="13px" width="304px" fill="#323232" font-weight="400" align="top" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="7.375" transform="rotate(0)"><tspan id="SvgjsTspan1222" dy="16" x="10"><tspan id="SvgjsTspan1223" style="text-decoration:;font-size: inherit;">先通过 this.get() 得到它当前的值，然后做判断，如</tspan></tspan><tspan id="SvgjsTspan1224" dy="16" x="10"><tspan id="SvgjsTspan1225" style="text-decoration:;font-size: inherit;">果满⾜新旧值不等、新值是对象类型、 deep 模式任</tspan></tspan><tspan id="SvgjsTspan1226" dy="16" x="10"><tspan id="SvgjsTspan1227" style="text-decoration:;font-size: inherit;">何⼀个条件，则执⾏ watcher 的回调回调函数执⾏的</tspan></tspan><tspan id="SvgjsTspan1228" dy="16" x="10"><tspan id="SvgjsTspan1229" style="text-decoration:;font-size: inherit;">时候会把第⼀个和第⼆个参数传⼊新值 value 和旧值 </tspan></tspan><tspan id="SvgjsTspan1230" dy="16" x="10"><tspan id="SvgjsTspan1231" style="text-decoration:;font-size: inherit;">oldValue ，这就是当我们添加⾃定义 watcher 的时</tspan></tspan><tspan id="SvgjsTspan1232" dy="16" x="10"><tspan id="SvgjsTspan1233" style="text-decoration:;font-size: inherit;">候能在回调函数的参数中拿到新旧值的原因。</tspan></tspan></text></g></g><g id="SvgjsG1234"><path id="SvgjsPath1235" d="M1559 317.9034080505371L1559 287.91193199157715L1492.5482635498047 287.91193199157715L1492.5482635498047 259.5204559326172" stroke-dasharray="3,3" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1236)"></path></g><g id="SvgjsG1238"><path id="SvgjsPath1239" d="M1559 389.9034080505371L1559 419.89488410949707L1559 419.89488410949707L1559 447.286360168457" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1240)"></path></g><g id="SvgjsG1242" transform="translate(1509,450.88636016845703)"><path id="SvgjsPath1243" d="M 0 4Q 0 0 4 0L 96 0Q 100 0 100 4L 100 66Q 100 70 96 70L 4 70Q 0 70 0 66Z" stroke="rgba(50,50,50,1)" stroke-width="2" fill-opacity="1" fill="#ffffff"></path><g id="SvgjsG1244"><text id="SvgjsText1245" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="24.375" transform="rotate(0)"><tspan id="SvgjsTspan1246" dy="16" x="50"><tspan id="SvgjsTspan1247" style="text-decoration:;">this.get()</tspan></tspan></text></g></g><g id="SvgjsG1248"><path id="SvgjsPath1249" d="M1610 485.88636016845703L1642.2980670928955 485.88636016845703L1642.2980670928955 527.0305414199829L1676.8655342102052 527.0305414199829" stroke="#323232" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1250)"></path></g><g id="SvgjsG1252" transform="translate(1679.465534210205,450.88636016845703)"><path id="SvgjsPath1253" d="M 0 0L 187.06893157958984 0L 203.06893157958984 16L 203.06893157958984 152.28836250305176L 0 152.28836250305176L 0 0Z" stroke="none" fill-opacity="1" fill="#ffffaa"></path><path id="SvgjsPath1254" d="M 187.06893157958984 0L 187.06893157958984 16L 203.06893157958984 16Z" stroke="none" fill-opacity="1" fill="#cdcdcd"></path><path id="SvgjsPath1255" d="M 0 0L 187.06893157958984 0L 203.06893157958984 16L 203.06893157958984 152.28836250305176L 0 152.28836250305176L 0 0Z" stroke="none" fill="none"></path><g id="SvgjsG1256"><text id="SvgjsText1257" font-family="微软雅黑" text-anchor="start" font-size="13px" width="184px" fill="#323232" font-weight="400" align="top" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="7.375" transform="rotate(0)"><tspan id="SvgjsTspan1258" dy="16" x="10"><tspan id="SvgjsTspan1259" style="text-decoration:;">对于渲染 watcher ⽽⾔，它在</tspan></tspan><tspan id="SvgjsTspan1260" dy="16" x="10"><tspan id="SvgjsTspan1261" style="text-decoration:;">执⾏ this.get() ⽅法求值的时</tspan></tspan><tspan id="SvgjsTspan1262" dy="16" x="10"><tspan id="SvgjsTspan1263" style="text-decoration:;">候，会执⾏ getter ⽅法：</tspan></tspan><tspan id="SvgjsTspan1264" dy="16" x="10"><tspan id="SvgjsTspan1265" style="text-decoration:;">updateComponent = () =&gt; {</tspan></tspan><tspan id="SvgjsTspan1266" dy="16" x="10"><tspan id="SvgjsTspan1267" style="text-decoration:;">vm._update(vm._render(), </tspan></tspan><tspan id="SvgjsTspan1268" dy="16" x="10"><tspan id="SvgjsTspan1269" style="text-decoration:;">hydrating)</tspan></tspan><tspan id="SvgjsTspan1270" dy="16" x="10"><tspan id="SvgjsTspan1271" style="text-decoration:;">}</tspan></tspan><tspan id="SvgjsTspan1272" dy="16" x="10"><tspan id="SvgjsTspan1273" style="text-decoration:;">重新render</tspan></tspan></text></g></g></svg>